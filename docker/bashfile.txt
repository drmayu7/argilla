#!/bin/bash -ex
yum update -y

# Install Docker
yum install -y docker
systemctl enable docker
service docker start
chkconfig docker on

# Install docker-compose
curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# Install git, aws-cli, and jq for parsing JSON
yum install -y git aws-cli jq

# Clone the argilla repository
git clone https://github.com/drmayu7/argilla.git
cd argilla

# Retrieve secrets from AWS Secrets Manager
SECRET_NAME="doccano-admin-login"
REGION="ap-southeast-1"

# setup ec2-role to accept secrets manager

# Retrieve the secrets
SECRET=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --region $REGION | jq -r .SecretString)

# Extract and export the necessary variables
export ARGILLA_SECRET=$(echo $SECRET | jq -r .argilla_secret)
export DEFAULT_PASSWORD=$(echo $SECRET | jq -r .password)
export DEFAULT_APIKEY=$(echo $SECRET | jq -r .api_key)

# Up the docker containers
docker-compose -f docker/docker-compose.yaml up -d

#cloud-config
package_update: true
package_upgrade: true
runcmd:
- yum install -y amazon-efs-utils
- apt-get -y install amazon-efs-utils
- yum install -y nfs-utils
- apt-get -y install nfs-common
- file_system_id_1=fs-05938a0db346416a4
- efs_mount_point_1=/mnt/efs/fs1
- mkdir -p "${efs_mount_point_1}"
- test -f "/sbin/mount.efs" && printf "\n${file_system_id_1}:/ ${efs_mount_point_1} efs tls,_netdev\n" >> /etc/fstab || printf "\n${file_system_id_1}.efs.ap-southeast-1.amazonaws.com:/ ${efs_mount_point_1} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0\n" >> /etc/fstab
- test -f "/sbin/mount.efs" && grep -ozP 'client-info]\nsource' '/etc/amazon/efs/efs-utils.conf'; if [[ $? == 1 ]]; then printf "\n[client-info]\nsource=liw\n" >> /etc/amazon/efs/efs-utils.conf; fi;
- retryCnt=15; waitTime=30; while true; do mount -a -t efs,nfs4 defaults; if [ $? = 0 ] || [ $retryCnt -lt 1 ]; then echo File system mounted successfully; break; fi; echo File system not available, retrying to mount.; ((retryCnt--)); sleep $waitTime; done;
